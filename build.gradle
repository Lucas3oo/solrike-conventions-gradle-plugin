plugins {
  id 'eclipse'

  // https://plugins.gradle.org/docs/publish-plugin
  id 'com.gradle.plugin-publish' version '1.0.0' // plugin publication, and java-gradle-plugin and maven-publish plugins
  id 'groovy-gradle-plugin'
}

repositories {
  mavenCentral()
  gradlePluginPortal()
}

dependencies {
  // versions for the plugins are controlled here
  // Alt way to ref is <plugin id>:<plugin id>.gradle.plugin:<version>.
  implementation 'com.diffplug.spotless:spotless-plugin-gradle:6.11.0'
  implementation 'com.github.spotbugs.snom:spotbugs-gradle-plugin:5.0.14'
  implementation 'org.owasp:dependency-check-gradle:8.2.1'
  implementation 'se.solrike.sonarlint:se.solrike.sonarlint.gradle.plugin:1.0.0-beta.13'

  testImplementation('org.assertj:assertj-core:3.22.0')
  testImplementation('org.junit.jupiter:junit-jupiter')
  testImplementation(platform('org.junit:junit-bom:5.8.2'))
}

group = 'se.solrike.conventions'
version = '1.0.0-beta.4'
java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}
javadoc {
  enabled = false
}

tasks.withType(GroovyCompile) {
  configure(options) {
    options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
  }
}



eclipse {
  classpath {
    defaultOutputDir = file('bin.nosync/main')
    file {
      whenMerged {
        def src = entries.find { it.path == 'src/main/groovy' }
        if (src) src.output = 'bin.nosync/main'
        src = entries.find { it.path == 'src/main/resources' }
        if (src) src.output = 'bin.nosync/main'
        src = entries.find { it.path == 'src/test/groovy' }
        if (src) src.output = 'bin.nosync/test'
        src = entries.find { it.path == 'src/test/resources' }
        if (src) src.output = 'bin.nosync/test'
        src = entries.find { it.path == 'adapter-src' }
        if (src) src.output = 'bin.nosync/main'
      }
    }
  }
}

// publish the plugin like: ./gradlew publishPlugins
gradlePlugin {
  plugins {
    matching { it.name == 'se.solrike.conventions.java-conventions' }.configureEach {
      description =
          'Gradle convention plugins for Java projects. ' +
          'Configures Checkstyle, Dependency check, Eclipse, Jacoco, ' +
          'Java, Sonarlint, Spotbugs, Spotless plugins. ' +
          'Defines for instance Checkstyle rules, ' +
          'Spotbugs exclude filter, changes the default included and excluded Sonarlint rules and ' +
          'formatting rules for Spotless. Sets the output folder in Eclipse .classpath file.'
      displayName = 'Java conventions plugin for solrike.se'
    }
  }
}

pluginBundle {
  // These settings are set for the whole plugin bundle
  website = 'https://github.com/Lucas3oo/solrike-conventions-gradle-plugin'
  vcsUrl = website
  pluginTags = [
   'se.solrike.conventions.java-conventions': [
      'conventions',
      'checkstyle',
      'dependencycheck',
      'eclipse',
      'jacoco',
      'java',
      'sonarlint',
      'spotbugs',
      'spotless'
    ]
  ]
}

// Run ./gradlew wrapper
wrapper {
  gradleVersion = '7.5.1'
}
